<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">

    <!--本地测试环境 不要提交配置-->
    <!--<context:property-placeholder location="WEB-INF/config/config.local.properties"/>-->
    <!--局域网测试环境-->
    <context:property-placeholder location="WEB-INF/config/config.test.properties"/>
    <!--线上环境-->
    <!--<context:property-placeholder location="WEB-INF/config/config.online.properties"/>-->
    <context:annotation-config/>
    <mvc:annotation-driven/>
    <context:component-scan base-package="com.hpz"/>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <bean id="aspect" class="com.hpz.common.aspectjLog.AspectjLog"/>

    <aop:config>
        <aop:pointcut id="pointcut" expression="execution (* com.hpz.remote.service.*.*(..))"/>
        <aop:aspect ref="aspect">
            <aop:around method="doAround" pointcut-ref="pointcut"/>
        </aop:aspect>
    </aop:config>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="WEB-INF/mybatis/mybatis-config.xml"></property>
        <property name="mapperLocations" value="WEB-INF/mybatis/*Mapper.xml"/>
        <property name="typeAliasesPackage" value="com.hpz.out.model"/>
    </bean>

    <!--扫描 basePackage下所有的dao接口，并根据对应的mapper.xml为其生成代理类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hpz.dao"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <bean id="emTransactionManager" name="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <tx:annotation-driven transaction-manager="emTransactionManager"
                          proxy-target-class="true" />

    <mvc:annotation-driven conversion-service="conversionService" />
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>

    <import resource="Hessian-service.xml" />

</beans>